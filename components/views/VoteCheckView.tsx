import { getCountryName } from "üõ†Ô∏è/intl.ts";
import { VoteRequestCheck } from "üõ†Ô∏è/vote-check.ts";

import BlankSlate from "üß±/BlankSlate.tsx";
import Quotes from "üß±/Quotes.tsx";
import View from "üß±/View.tsx";

interface Props {
  voteCheck: VoteRequestCheck;
  backLink?: Readonly<[string, string]>;
}

export default function VoteCheckView(props: Props) {
  const { voteCheck, backLink } = props;
  const { status, ip, countryCode, city, cityFilter } = voteCheck;
  const countryName = getCountryName(countryCode!);
  const headline = "–ü—Ä–æ–±–ª–µ–º —Å –í–∞—à–∏—è IP –∞–¥—Ä–µ—Å";
  const countryIpText = "–¢–æ–π —Ç—Ä—è–±–≤–∞ –¥–∞ –µ –æ—Ç –ë—ä–ª–≥–∞—Ä–∏—è.";

  let message;

  if (status === "missing_ip_header") {
    message = (
      <>
        –ù–µ –º–æ–∂–µ–º –¥–∞ —É—Å—Ç–∞–Ω–æ–≤–∏–º –í–∞—à–∏—è IP –∞–¥—Ä–µ—Å.
      </>
    );
  } else if (
    status === "missing_country_header" ||
    status === "country_unknown"
  ) {
    message = (
      <>
        –ù–µ –º–æ–∂–µ–º –¥–∞ —É—Å—Ç–∞–Ω–æ–≤–∏–º –æ—Ç –∫–æ—è –¥—ä—Ä–∂–∞–≤–∞—Ç–∞ –µ –í–∞—à–∏—è—Ç IP –∞–¥—Ä–µ—Å.{" "}
        {countryIpText}
      </>
    );
  } else if (status === "tor") {
    message = (
      <>
        –í–∏–µ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ <Quotes>–¢–æ—Ä</Quotes> –±—Ä–∞—É–∑—ä—Ä. –ú–æ–ª—è, –≤—Ä–µ–º–µ–Ω–Ω–æ –≥–æ —Å–ø—Ä–µ—Ç–µ.
      </>
    );
  } else if (status === "country_mismatch") {
    message = (
      <>
        –í–∞—à–∏—è—Ç IP –∞–¥—Ä–µ—Å <Quotes>{ip}</Quotes> e –æ—Ç {countryName}.{" "}
        {countryIpText}
      </>
    );
  } else if (status === "missing_city_header") {
    message = (
      <>
        –ù–µ –º–æ–∂–µ–º –¥–∞ —Ä–∞–∑–±–µ—Ä–µ–º –æ—Ç –∫–æ–π –≥—Ä–∞–¥ –µ IP –∞–¥—Ä–µ—Å—ä—Ç –í–∏. –¢–æ–π —Ç—Ä—è–±–≤–∞ –¥–∞ e –æ—Ç
        {" "}
        <Quotes>{cityFilter}</Quotes>.
      </>
    );
  } else if (status === "city_mismatch") {
    message = (
      <>
        –í–∞—à–∏—è—Ç IP –∞–¥—Ä–µ—Å <Quotes>{ip}</Quotes> e –æ—Ç{" "}
        <Quotes>{city}</Quotes>, a —Ç—Ä—è–±–≤–∞ –¥–∞ e –æ—Ç <Quotes>{cityFilter}</Quotes>.
      </>
    );
  }

  return (
    <View
      docTitle={headline}
      backLink={backLink}
      blankSlate={
        <BlankSlate
          icon="üö´"
          headline={headline}
          subline={message}
        />
      }
    />
  );
}
