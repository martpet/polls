import { ComponentChild } from "preact";

import { authErrorsTexts } from "üõ†Ô∏è/constants.ts";
import { SIGN_IN_PATH, VALIDATE_PHONE_PATH } from "üõ†Ô∏è/paths.ts";
import { AuthError, PhoneError, User } from "üõ†Ô∏è/types.ts";

import Alert, { AlertActionLink } from "üß±/Alert.tsx";
import Button, { ButtonLink } from "üß±/Button.tsx";
import View from "üß±/View.tsx";

export const CONFIRM_PHONE_URL = "https://myaccount.google.com/phone";
export const EDIT_PHONE_URL = "https://myaccount.google.com/profile/phone/edit";
export const ADD_PHONE_URL =
  "https://myaccount.google.com/profile/phone/edit?add=true";

type AnyUserError = AuthError | PhoneError;

const alerts: Record<AnyUserError, ComponentChild> = {
  unknown_auth_error: authErrorsTexts["unknown_auth_error"],
  access_denied: authErrorsTexts["access_denied"],
  unknown_phone_error:
    "–ü–æ–ª—É—á–∏ —Å–µ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–µ–≥–ª–µ–∂–¥–∞–Ω–µ—Ç–æ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.",
  phone_access_denied: (
    <>
      <p>
        –í–ª–µ–∑—Ç–µ –æ—Ç–Ω–æ–≤–æ —Å <em>Google</em>{" "}
        –∏ —Ä–∞–∑—Ä–µ—à–µ—Ç–µ –¥–æ—Å—Ç—ä–ø –¥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—è –í–∏ –Ω–æ–º–µ—Ä.
      </p>
    </>
  ),
  phone_missing: (
    <>
      –ù–µ —Å—Ç–µ –¥–æ–±–∞–≤–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–µ–Ω –Ω–æ–º–µ—Ä –≤ <em>Google</em> –ø—Ä–æ—Ñ–∏–ª–∞ –í–∏.
      <AlertActionLink href={EDIT_PHONE_URL} target="blank">
        –î–æ–±–∞–≤–µ—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω–µ–Ω –Ω–æ–º–µ—Ä
      </AlertActionLink>
    </>
  ),
  phone_country_code_bad: (
    <>
      –ù—è–º–∞—Ç–µ –±—ä–ª–≥–∞—Ä—Å–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–µ–Ω –Ω–æ–º–µ—Ä –≤ <em>Google</em> –ø—Ä–æ—Ñ–∏–ª–∞ –í–∏.
      <AlertActionLink href={EDIT_PHONE_URL} target="blank">
        –î–æ–±–∞–≤–µ—Ç–µ –±—ä–ª–≥–∞—Ä—Å–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–µ–Ω –Ω–æ–º–µ—Ä
      </AlertActionLink>
    </>
  ),
  phone_unverified: (
    <>
      –í–∞—à–∏—è—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–µ–Ω –Ω–æ–º–µ—Ä –≤ <em>Google</em> –µ –Ω–µ–ø–æ—Ç–≤—ä—Ä–¥–µ–Ω.
      <AlertActionLink href={CONFIRM_PHONE_URL} target="blank">
        –ü–æ—Ç–≤—ä—Ä–¥–µ—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—è –Ω–æ–º–µ—Ä
      </AlertActionLink>
    </>
  ),
  phone_already_used: (
    <>
      –í–∞—à–∏—è—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–µ–Ω –µ –∏–∑–ø–æ–ª–∑–≤–∞–Ω –æ—Ç –¥—Ä—É–≥ <em>Google</em> –ø—Ä–æ—Ñ–∏–ª.
      <AlertActionLink href={ADD_PHONE_URL} target="blank">
        –î–æ–±–∞–≤–µ—Ç–µ –¥—Ä—É–≥ —Ç–µ–ª–µ—Ñ–æ–Ω–µ–Ω –Ω–æ–º–µ—Ä
      </AlertActionLink>
    </>
  ),
};

const accessRequestErrors: AnyUserError[] = [
  "access_denied",
  "phone_access_denied",
  "unknown_auth_error",
];

interface Props {
  user: User | null;
  url: URL;
  headline?: string;
}

export default function VoteAuthView(props: Props) {
  const { user, url } = props;
  const authError = url.searchParams.get("error") as AuthError | null;
  const phoneError = user?.phoneStatus !== "valid" && user?.phoneStatus;
  const error = authError || phoneError;
  const alertMsg = error && alerts[error];
  const isAccessRequest = !error || accessRequestErrors.includes(error);
  const signinUrl = new URL(url);
  signinUrl.pathname = SIGN_IN_PATH;
  const phoneValidationUrl = new URL(url);
  phoneValidationUrl.pathname = VALIDATE_PHONE_PATH;
  [signinUrl, phoneValidationUrl].forEach((u) => {
    u.search = "";
    u.searchParams.set("from", url.pathname);
    u.searchParams.set("to", url.pathname.replace("/auth", "/vote"));
  });
  return (
    <View width="sm">
      {alertMsg && <Alert class="mb-10">{alertMsg}</Alert>}
      <h1>–ü—Ä–æ–¥—ä–ª–∂–µ—Ç–µ —Å Google</h1>
      <p class="lead mb-9">–ü–æ—Ç–≤—ä—Ä–¥–µ—Ç–µ, —á–µ —Å—Ç–µ —Ä–µ–∞–ª–µ–Ω –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª.</p>
      {isAccessRequest && (
        <ButtonLink href={signinUrl.href}>
          –í—Ö–æ–¥ —Å Google
        </ButtonLink>
      )}
      {!isAccessRequest && (
        <form method="POST" action={phoneValidationUrl.href}>
          <Button>–ì–æ—Ç–æ–≤ —Å—ä–º</Button>
        </form>
      )}
    </View>
  );
}
